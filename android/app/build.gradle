apply plugin: "com.android.application"

import com.android.build.OutputFile

project.ext.vectoricons = [
    iconFontNames: ['SimpleLineIcons.ttf', 'Entypo.ttf']
]

apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"

def tempResDir = "$buildDir/react-native-fix/res"
def tempAssetsDir = "$buildDir/react-native-fix/assets"

project.ext.react = [
    bundleAssetName: 'index.android.bundle',
    entryFile: 'index.js',

    bundleInRelease: true,
    devDisabledInRelease: true,

    bundleInDebug: false,
    devDisabledInDebug: false,

    bundleInStaging: true,
    devDisabledInStaging: false,

    bundleInEnvTestStaging: true,
    devDisabledInEnvTestStaging: false,

    tempResDir: tempResDir,
    tempAssetsDir: tempAssetsDir
]

apply from: '../react.gradle'

def enableSeparateBuildPerCPUArchitecture = false
def enableProguardInReleaseBuilds = true

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    sourceSets {
        main {
            res.srcDirs += tempResDir
            assets.srcDirs += tempAssetsDir
        }
    }

    defaultConfig {
        applicationId 'com.pragaleria'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }
        if (System.env.VERSION_CODE != null) {
            versionCode System.env.VERSION_CODE.toInteger()
            versionName '0.1.' + System.env.VERSION_CODE
        } else {
            versionCode 1
            versionName '0.0.1'
        }
    }
    signingConfigs {
        test {
            if (System.env.TEST_KEYSTORE_LOCATION != null) {
                storeFile file(System.env.TEST_KEYSTORE_LOCATION)
                storePassword System.env.TEST_KEYSTORE_PASSWORD
                keyAlias System.env.TEST_KEYSTORE_KEY_ALIAS
                keyPassword System.env.TEST_KEYSTORE_PASSWORD
            }
        }
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include 'armeabi-v7a', 'x86'
        }
    }
    buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        staging {
            minifyEnabled enableProguardInReleaseBuilds
            signingConfig signingConfigs.test
            applicationIdSuffix 'staging'
            matchingFallbacks = ['debug']
        }
        debug {
            minifyEnabled false
            applicationIdSuffix 'debug'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ['armeabi-v7a':1, 'x86':2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":react-native-vector-icons")
    implementation project(":react-native-splash-screen")
    implementation project(":react-native-splash-screen")
    implementation project(":react-native-vector-icons")
    implementation project(path: ":react-native-orientation", configuration: "default")
    implementation (project(':react-native-camera')) {
        exclude group: "com.google.android.gms"
        implementation 'com.android.support:exifinterface:25.+'
        implementation ("com.google.android.gms:play-services-vision:${rootProject.ext.googlePlayServicesVersion}") {
            force = true
        }
    }
    implementation project(path: ":react-native-maps", configuration: "default")
    implementation project(path: ":react-native-rear-camera-characteristics-display-metrics", configuration: "default")
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.facebook.react:react-native:+"
    implementation "com.bugfender.sdk:android:1.+"
    implementation "net.hockeyapp.android:HockeySDK:5.1.0"
    implementation "com.android.support:exifinterface:+"
    implementation "com.android.support:support-annotations:+"
    implementation "com.android.support:support-v4:+"
    implementation "com.google.android.gms:play-services-base:${rootProject.ext.googlePlayServicesVersion}"
    implementation "com.google.android.gms:play-services-maps:${rootProject.ext.googlePlayServicesVersion}"
}
